@import ".././../styles/global.scss";
.expandGrid {
  color: $primary;
  display: flex;
  flex-direction: column;
  justify-content: center;
  &-background{
    background-size: cover;
    background-repeat: no-repeat;
    padding: 1em 0 0 0;
  }
  h2 {
    flex-grow: 1;
    font-weight: 700;
    text-transform: uppercase;
    @media screen and (min-width: $breakpoint-md) {
      text-align: center;
    }
  }
  h6 {
    font-weight: 400;
    margin-bottom: 10px;
    @media screen and (min-width: $breakpoint-md) {
      text-align: center;
      line-height: 28px;
      margin-bottom: 50px;
    }
  }
}
.staggered-list-content {
  margin-top: 2em;
  width: 100%;
  display: flex;
  justify-content: center;
  @media screen and (min-width: $breakpoint-md) {
    margin-top: 3em;
  }
}
.list {
  list-style-type: none;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 100%;
}
.listItem {
  border-radius: 8px;
  margin: 5px;
  flex: 0 1 calc(calc(100% / 3) - 10px);
  &-focus {
    flex: 0 1 calc(calc(100% / 3) - 10px);
  }
  background-color: $primary-container;
  cursor: pointer;
  @media screen and (max-width: $breakpoint-xxl) {
    flex: 0 1 calc(calc(100% / 3) - 10px);
  }
  @media screen and (max-width: calc($breakpoint-md - 2px)) {
    flex: 0 1 100%;
  }
  &-expanded {
    @extend .listItem;
    flex-basis: 100%;
  }
}
.listItemContent {
  display: flex;
  flex-direction: row;
  height: 100%;
  position: relative;
  @media screen and (max-width: calc($breakpoint-md - 2px)) {
    flex-direction: column;
    align-items: unset;
  }
  &-expanded {
    @extend .listItemContent;
    & > *:not(img) {
      padding: 1em;
    }
  }
}
.avatar {
  width: 100%;
  aspect-ratio: 1/1;
  margin: 0;
  border-radius: 8px;
  &-expanded {
    @extend .avatar;
    box-shadow: 0px 4px 4px 0px #00000040;
    flex-grow: 0;
    margin-right: 0;
    min-width: 33%;
    max-width: 33%;
    @media screen and (max-width: calc($breakpoint-md - 2px)) {
      min-width: 100%;
      max-width: 100%;
      height: 400px;
      object-fit: cover;
    }
    @media screen and (max-width: calc($breakpoint-md - 2px)) {
      height: unset;
      object-fit: unset;
    }
  }
}
.expandedListItem .description {
  display: flex;
  flex-direction: column;
}
.expandedListItem {
  cursor: pointer;
  background-color: #D0D0D0;
}
.additional-content {
  box-shadow: 0px 4px 4px 0px #00000040;
  width: 100%;
  overflow: hidden;
  @media screen and (max-width: 890px) {
    margin: 0;
  }
}
.listItem-more {
  position: absolute;
  inset: 0 0 20px 20px;
  display: flex;
  align-items: flex-end;
  justify-content: baseline;
  transition: opacity 200ms ease;
  opacity: 1;
  color: black;
  width: 90%;
  p {
    padding: 0;
    margin: 0;
  }
  &-expanded {
    @extend .listItem-more;
    padding: 0 !important;
    @media screen and (max-width: $breakpoint-xl) {
      display: none;
    }
  }
}
.additional-content > div {
  opacity: 0;
  border-radius: 3px;
  display: flex;
  flex-direction: column;
  &-markdown{
    height: 80%;
    overflow: hidden;
  }
  a {
    font-weight: 600;
    color: $secondary;
    text-decoration: underline;
    margin: auto 0 10px 10px;
    z-index: 4;
  }
  h4 {
    text-align: left;
  }
}
/* content fade in animations */
@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
  }
}
.animated-in .additional-content > div {
  animation: fadeIn 0.4s forwards;
}